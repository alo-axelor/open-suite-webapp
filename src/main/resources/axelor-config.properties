################################################################################
#
# Application Configuration
#
################################################################################

# Application Information
# ~~~~~
application.name = Axelor Open Suite
application.description = Axelor Entreprise Application
application.version = 7.0.0

# Author/Company
# ~~~~~
application.author = Axelor
application.copyright = Copyright (c) {year} Axelor. All Rights Reserved.

# Database settings
# ~~~~~
# See hibernate documentation for connection parameters

# PostgreSQL
db.default.driver = org.postgresql.Driver
db.default.ddl = update
db.default.url = jdbc:postgresql://localhost:5432/axelor-open-suite
db.default.user = axelor
db.default.password = *****

# Shared cache mode settings
# ~~~~~
javax.persistence.sharedCache.mode = ENABLE_SELECTIVE

# MySQL
#db.default.driver = com.mysql.cj.jdbc.Driver
#db.default.ddl = update
#db.default.url = jdbc:mysql://localhost:3306/axelor_demo_dev
#db.default.user = axelor
#db.default.password =

# Oracle
#db.default.driver = oracle.jdbc.OracleDriver
#db.default.ddl = update
#db.default.url = jdbc:oracle:thin:@localhost:1521:oracle
#db.default.user = axelor
#db.default.password =

# Hibernate full-text search
# ~~~~~
hibernate.search.default.directory_provider = none
hibernate.search.default.indexBase = {java.io.tmpdir}/axelor

# HikariCP connection pool
# ~~~~~
hibernate.hikari.minimumIdle = 5
hibernate.hikari.maximumPoolSize = 20
hibernate.hikari.idleTimeout = 300000

# Application time out in minutes
# ~~~~~
session.timeout = 480

# Home Website
# ~~~~~
# link to be used with header logo
application.home = http://www.axelor.com

# Header Logo
# ~~~~~
# Should be 40px in height with transparent background
application.logo = img/axelor.png

# Link to the online help
# ~~~~~
application.help = http://docs.axelor.com

# Default Locale (language)
# ~~~~~
# Set default application locale (en, fr, fr_FR, en_US)
application.locale = fr

# Set default CSS theme, for example `blue`
application.theme = modern

# Application deployment mode
# ~~~~~
# Set to 'dev' for development mode else 'prod'
application.mode = dev

# Timezone
# ~~~~~
date.timezone = UTC

# Menu
# ~~~~~
# Set menu style (left, top, both)
application.menu = both

# View options
# ~~~~~
application.view.toolbar-title = hide

# Data export (csv) encoding
# ~~~~
# Use Windows-1252, ISO-8859-1 or ISO-8859-15 if targeting ms excel
# (excel does not recognize utf8 encoded csv)
#data.export.encoding = UTF-8

# Data export (CSV) locale
# Use this to specify the same data export locale for all users.
# Otherwise, user locale is used.
#data.export.locale =

# Data export (CSV) separator
# ~~~~
#data.export.separator = ;

# Upload filename pattern, default is auto where file is save with same name
# in the given upload dir, if file is already there, a count number is
# appended to file name.
#
# This can be overridden by providing custom name pattern, for example:
#
#   file.upload.filename.pattern = {year}-{month}/{day}/{name}
#   file.upload.filename.pattern = {AA}/{name}
#
# {name} should be placed at the end. If omitted, he is append by default a the end.
#
# Following placeholders can be used:
#
# {year} - current year
# {month} - current month
# {day} - current day
# {name} - file name
# {A} - first letter from file name
# {AA} - first 2 letter from file name
# {AAA} - first 3 letter from file name
#
#data.upload.filename.pattern = auto

# Encrypted fields
# ~~~~
# Encryption password
# ENSURE THAT YOU DON'T LOSE IT.
# If you lose this password, you will be unable to access variables stored in database.
encryption.password = MySuperSecretKey
# Algorithm mode (CBC or GCM)
encryption.algorithm = CBC

# User password pattern
# ~~~~
# at least 8 characters with at least three of these four types: lowercase, uppercase, digit, special
user.password.pattern = (((?=.*[a-z])(?=.*[A-Z])(?=.*\\d))|((?=.*[a-z])(?=.*[A-Z])(?=.*\\W))|((?=.*[a-z])(?=.*\\d)(?=.*\\W))|((?=.*[A-Z])(?=.*\\d)(?=.*\\W))).{8,}

# Storage path for export action
# ~~~~~
data.export.dir = {java.io.tmpdir}/axelor

# Storage path for upload files (attachments)
# ~~~~~
# use {user.home} key to save files under user home directory, or
# use absolute path where server user have write permission.
data.upload.dir = {java.io.tmpdir}/axelor

# Maximum upload size (in MB)
# ~~~~~
data.upload.size = 5

# Whitelist pattern can be used to allow file upload with matching names.
#
# For example: \\.(xml|html|jpg|png|pdf|xsl)$
#
# Regular expression
# ~~~~~
#data.upload.whitelist.pattern =

# Blacklist pattern can be used to block file upload with matching names.
#
# Regular expression
# ~~~~~
#data.upload.blacklist.pattern =

# Whitelist content type can be used to allow file upload with matching content.
#
# List of mime-types (plain/text,image/*,video/webm)
# ~~~~~
#data.upload.whitelist.types =

# Blacklist content type can be used to block file upload with matching content.
#
# List of mime-types (plain/text,image/*,video/webm)
# ~~~~~
#data.upload.blacklist.types =

# Indicate if the birt engine to use is the embedded engine or external engine
# Default : true
# ~~~~~
axelor.report.use.embedded.engine =

# Link to report enginePath (external engine)
# Example : http://localhost:8080/birt
# Default : {webapps server}/birt
# ~~~~~
axelor.report.engine =

# The external report design directory
# ~~~~~
# this directory is searched for the rptdesign files
# (fallbacks to designs provided by modules)
reports.design.dir = {user.home}/data/reports

# Storage path for report outputs
reports.output-dir = {user.home}/.axelor/reports-gen

# Reports custom fonts path
reports.fonts.config = fonts/ReportFonts.xml

# Reports resource path (external engine)
# Default : report
# ~~~~~
axelor.report.resource.path =

# Storage path for templates
# ~~~~~
template.search-dir = {user.home}/.axelor/templates

# Enable/disable demo data
# ~~~~~
data.import.demo-data = false

# Custom context values
# ~~~~~
context.app = com.axelor.studio.app.service.AppService
context.appLogo = com.axelor.apps.base.service.user.UserService:getUserActiveCompanyLogoLink

# CORS configuration
# ~~~~~
# CORS configuration to allow cross origin requests
# ~~~~~
# regular expression to test allowed origin or * to allow all (not recommended)
#cors.allow.origin = *
#cors.allow.credentials = true
#cors.allow.methods = GET,PUT,POST,DELETE,HEAD,OPTIONS
#cors.allow.headers = Origin,Accept,X-Requested-With,Content-Type,Access-Control-Request-Method,Access-Control-Request-Headers

# API
# ~~~~~

# Define the maximum number of items per page
api.pagination.max-per-page = 1000
# Define the default number of items per page
api.pagination.default-per-page = 40

# Logging
# ~~~~~
# Custom logback configuration can be provided with `logging.config` property pointing
# to a custom `logback.xml`. In this case, all the logging configuration provided here
# will be ignored.
#
# Following settings can be used to configure logging system automatically.
#
#logging.path = {user.home}/.axelor/logs
#logging.pattern.file = %d{yyyy-MM-dd HH:mm:ss.SSS} %5p ${PID:- } --- [%t] %-40.40logger{39} : %m%n
#logging.pattern.console = %clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n

# Global logging
logging.level.root = ERROR
# Log everything.
logging.level.com.axelor = DEBUG
# Hibernate logging
# Log everything. Good for troubleshooting
#logging.level.org.hibernate = INFO

# Log all SQL DML statements as they are executed
#logging.level.org.hibernate.SQL = DEBUG
#logging.level.org.hibernate.engine.jdbc = DEBUG

# Log all SQL DDL statements as they are executed
#logging.level.org.hibernate.tool.hbm2ddl = INFO

# Log all JDBC parameters
#logging.level.org.hibernate.type = ALL

# Log transactions
#logging.level.org.hibernate.transaction = DEBUG

# Log L2-Cache
#logging.level.org.hibernate.cache = DEBUG

# Log JDBC resource acquisition
#logging.level.org.hibernate.jdbc = TRACE
#logging.level.org.hibernate.service.jdbc = TRACE

# Log connection pooling
#logging.level.com.zaxxer.hikari = INFO

# Quartz scheduler
# ~~~~~
# Specify whether to enable quartz scheduler
#quartz.enable = true
# total number of threads in quartz thread pool
# the number of jobs that can run simultaneously
#quartz.threadCount = 5

# SMPT configuration
# ~~~~~
# SMTP server configuration
#mail.smtp.host = smtp.gmail.com
#mail.smtp.port = 587
#mail.smtp.channel = starttls
#mail.smtp.user = user@gmail.com
#mail.smtp.password = secret

# timeout settings
#mail.smtp.timeout = 60000
#mail.smtp.connection-timeout = 60000

# IMAP configuration
# ~~~~~
# IMAP server configuration
# (quartz scheduler should be enabled for fetching stream replies)
#mail.imap.host = imap.gmail.com
#mail.imap.port = 993
#mail.imap.channel = ssl
#mail.imap.user = user@gmail.com
#mail.imap.password = secret

# timeout settings
#mail.imap.timeout = 60000
#mail.imap.connection-timeout = 60000

# Allows to open maximum 10 Tabs
view.tabs.max = 10

#Activate global tracking log feature (track data modification/access in compliance with GDPR)
hibernate.session_factory.interceptor = com.axelor.apps.base.tracking.GlobalAuditInterceptor

# Get today date according to the active user's active company's timezone
context.date = com.axelor.apps.base.service.DateService:date

# Class to provide custom CSS style for user interface
context.appStyle = com.axelor.apps.base.service.app.AppBaseService:getCustomStyle

# Enable globally grid view customization
# Defaults to true: this feature is enabled by default, uncomment to disable
#view.customization = false

# View configuration
# ~~~~~

# Set to true to enable single view mode
view.single-tab = false

# Set menu style (left, top, both)
view.menubar.location = both

# Advance Filter Sharing
# ~~~~~
# Set to false to hide advance search filter share option, or set to list of
# role names to enable share for those roles only.
#view.adv-search.share = share-filter,can-share-filter

# CAS configuration
# ~~~~~

# login url
#auth.provider.cas.login-url = https://localhost:8443/cas/login
# prefix url
#auth.provider.cas.prefix-url = https://localhost:8443/cas

# CAS validation protocol: CAS10 / CAS20 / CAS20_PROXY / CAS30 (default) / CAS30_PROXY / SAML
#auth.provider.cas.protocol = CAS30

# for logout, you can use either central logout or logout default url
#auth.logout.central = true
#auth.logout.default-url = https://localhost:8443/cas/logout

# LDAP Configuration
# ~~~~~

# server URL (SSL is automatically enabled with ldaps protocol)
#auth.ldap.server.url = ldap://localhost:389
# use StartTLS
#auth.ldap.server.starttls = false
# SASL authentication type: simple (default) / CRAM-MD5 / DIGEST-MD5 / EXTERNAL / GSSAPI
#auth.ldap.server.auth.type = simple

# system user
#auth.ldap.server.auth.user = cn=admin,dc=test,dc=com
#auth.ldap.server.auth.password = admin

# group search base
#auth.ldap.group.base = ou=groups,dc=test,dc=com
# a template to search groups by user login id
#auth.ldap.group.filter = (uniqueMember=uid={0})

# user search base
#auth.ldap.user.base = ou=users,dc=test,dc=com
# a template to search user by user login id
#auth.ldap.user.filter = (uid={0})

# Google OpenID Connect
# ~~~~~

# client ID
#auth.provider.google.client-id =
# client secret
#auth.provider.google.secret =

# Keycloak OpenID Connect
# ~~~~~

# client ID
#auth.provider.keycloak.client-id = demo-app
# client secret
#auth.provider.keycloak.secret = 233d1690-4498-490c-a60d-5d12bb685557

# authentication realm
#auth.provider.keycloak.realm = demo-app
# Keycloak server base URI
#auth.provider.keycloak.base-uri = http://localhost:8083/auth

# SAML 2.0
# ~~~~~

# path to keystore
#auth.provider.saml.keystore-path = {java.io.tmpdir}/samlKeystore.jks
# value of the -storepass option for the keystore
#auth.provider.saml.keystore-password = open-platform-demo-passwd
# value of the -keypass option
#auth.provider.saml.private-key-password = open-platform-demo-passwd

# path to IdP metadata
#auth.provider.saml.identity-provider-metadata-path = http://localhost:9012/simplesaml/saml2/idp/metadata.php

# path to SP metadata
#auth.provider.saml.service-provider-metadata-path = {java.io.tmpdir}/sp-metadata.xml
# SP entity ID (defaults to auth.callback-url + "?client_name=SAML2Client")
#auth.provider.saml.service-provider-entity-id = sp.test.pac4j

# call identity provider logout endpoint
#auth.logout.central = true
# Applications to be installed by default
# ~~~~~~
# Examples
# Every module : all
# List of module : base,sale,account
#aos.apps.install-apps = base,sale,account

# Enable globally AOS API calls
# Defaults to false: no AOS API calls wil be successful
aos.api.enable = false

#Enable view collaboration
view.collaboration.enabled = false